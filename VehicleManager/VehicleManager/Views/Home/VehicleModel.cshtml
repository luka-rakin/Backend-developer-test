@{
    ViewData["Title"] = "Vehicle model";
    var selectedSortBy = Context.Request.Query["sortBy"].ToString();
    var selectedFilter = Context.Request.Query["makeId"].ToString();
    var sortOptions = new Dictionary<string, string>
    {
        { "NameAsc", "Sort by Name (A-Z)" },
        { "NameDesc", "Sort by Name (Z-A)" },
        { "AbrvAsc", "Sort by Abrv (A-Z)" },
        { "AbrvDesc", "Sort by Abrv (Z-A)" },
        { "MakeAsc", "Sort by Make (A-Z)" },
        { "MakeDesc", "Sort by Make (Z-A)" }
    };

    var successMessage = TempData["SuccessMessage"] as string;
    var errorMessage = TempData["ErrorMessage"] as string;
}
@model VehicleManager.DTO.PagedResult<VehicleManager.DTO.VehicleModelDto>

<div class="text-center">
    <h1 class="display-4">Vehicle model</h1>
    <hr />
    <a asp-controller="Home" asp-action="VehicleModelForm" class="btn btn-primary mt-3">+ Add new vehicle model</a>
    <hr/>

    <div class="d-flex flex-row">
        <div class="me-3 align-content-center">
            Filter:
        </div>
        <div>
            <form asp-action="VehicleModel" method="get" class="d-flex align-items-center">
            <select id="makeFilter" name="makeId" class="form-select w-auto d-inline" onchange="this.form.submit()">
                    
                    @if (string.IsNullOrEmpty(selectedFilter))
                    {
                        <option value="" selected>All Makes</option>
                    }
                    else
                    {
                        <option value="">All Makes</option>
                    }

                    @foreach (var make in (SelectList)ViewBag.VehicleMakes)
                    {
                        if (make.Value == selectedFilter)
                        {
                            <option value="@make.Value" selected>@make.Text</option>
                        }
                        else
                        {
                            <option value="@make.Value">@make.Text</option>
                        }
                    }
                    
            </select>
            <input type="hidden" name="sortBy" value="@selectedSortBy" />
            <input type="hidden" name="pageSize" value="@Model.PageSize" />
            <input type="hidden" name="pageNumber" value="1" />
        </form>
        </div>

    </div>
    <hr/>

    <div class="d-flex justify-content-between">

        <!-- Form for sorting -->
        <form asp-action="VehicleModel" method="get" class="d-flex align-items-center">
            <select id="sortBy" name="sortBy" class="form-select w-auto d-inline" onchange="this.form.submit()">
                @foreach (var option in sortOptions)
                {
                    <option value="@option.Key" selected="@(option.Key == selectedSortBy ? "selected" : null)">
                        @option.Value
                    </option>
                }
            </select>
            <input type="hidden" name="pageSize" value="@Model.PageSize" />
            <input type="hidden" name="pageNumber" value="1" />
            <input type="hidden" name="makeId" value="@selectedFilter" />
        </form>

        <!-- Page Size Dropdown -->
        <form asp-action="VehicleModel" class="mt-3 mb-3">
            <label for="pageSize" class="form-label">Items per page:</label>
            <select id="pageSize" name="pageSize" class="form-select w-auto d-inline" onchange="this.form.submit()">
                @foreach (var size in new int[] { 5, 10, 15, 20, 25, 30 })
                {
                    if (size == Model.PageSize)
                    {
                        <option value="@size" selected>@size</option>
                    }
                    else
                    {
                        <option value="@size">@size</option>
                    }
                }
            </select>
            <input type="hidden" name="pageNumber" value="1" />
        </form>


    </div>

    <div>
        <table class="table">
            <thead>
                <tr>
                    <th>Model</th>
                    <th>Make</th>
                    <th>Abrv</th>
                </tr>
            </thead>
            <tbody>
                @{
                    foreach (var vehicleModel in Model.Items)
                    {
                        <tr>
                            <td>@vehicleModel.Name</td>
                            <td>@vehicleModel.Make</td>
                            <td>@vehicleModel.Abrv</td>
                            <td>
                                <form asp-asp-controller="Home" asp-action="DeleteVehicleModel">
                                    <input type="hidden" name="id" value="@vehicleModel.Id"/>
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>


        <!-- Pagination -->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">

                <!-- Previous Button -->
                <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="VehicleModel" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortBy="@selectedSortBy">Previous</a>
                </li>

                <!-- Page Numbers -->
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="VehicleModel" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" asp-route-sortBy="@selectedSortBy">@i</a>
                    </li>
                }

                <!-- Next Button -->
                <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="VehicleModel" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" asp-route-sortBy="@selectedSortBy">Next</a>
                </li>
            </ul>
        </nav>
    </div>

    @if (!string.IsNullOrEmpty(successMessage))
    {
        <div class="alert alert-success">
            @successMessage
        </div>
    }

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">
            @errorMessage
        </div>
    }


</div>